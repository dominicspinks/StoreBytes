# Planning

## Purpose

Store files in the cloud and access them from anywhere. This is to replace the use of AWS S3 in my projects.

## Features and Functionality

These are the overall features to add to the application. They are to be split into priority levels.

-	Data storage
	-	Create 'buckets' to store files
	-   Upload files to buckets
	-   Download files from buckets
	-   Delete files from buckets
	-   Delete buckets
-	Management
	-	Sign up
	-	Sign in
	-	Sign out
	-	Change password
	-	Reset password
	-	Delete account
	-	Change username
	-	List buckets
	-	List files in a bucket
	-	Create API Key
	-	Delete API Key
-	Restrictions
	-	File size limits
	-   Data caps for users
-	Nice to haves:
	-	Encrypt files when stored on disk
    -   Save/serve smaller images (eg thumbnail size)
	-   Validate a file name is unique before submitting
	-	Protect open endpoints


## Plan

-	MVP (API only, no UI) - Done
	-	Register account (with manual verification) - done (minus verification, this will be added in the future)
	-	Get auth token (using API token) - done
	-	Create bucket - done
	-	Upload file - done
	-	Download file - done
-	V1.1
	-   Create UI
		-	Sign up - done
		-	Refactor to use class for environment variable names - done
		-	Sign in - done
		-	Sign out - done
		-	Generate API Key
		-	List buckets
		-	Delete bucket
		-	List files in bucket
			-	Display url
		-	Delete file from bucket
-	V1.2
	-	Delete API key
	-	Change password
	-	Forgot password
	-	Email 2fa on sign up
	-	Add security features
		-	Limit file size
		-	Add Data Cap
		-	Encrypt files on disk
-	V1.3
	-	Email notifications to me
		-	Someone registers
		-	Someone reaches their data cap
	-	UI for managing StoreBytes users
		

